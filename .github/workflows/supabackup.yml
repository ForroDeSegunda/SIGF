name: Database Backup

on:
  push:
    branches: [backup]
  pull_request:
    branches: [backup]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Runs every day at midnight

jobs:
  backup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      supabase_db_url: ${{ secrets.SUPABASE_DB_URL }} # For example: postgresql://postgres:[YOUR-PASSWORD]@db.<ref>.supabase.co:5432/postgres

    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Supabase
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}

      - name: Add Rclone Service Account File
        uses: AnimMouse/setup-rclone/service-account-file@v1
        with:
          service_account_filename: service-account-file.json
          service_account_file: ${{ secrets.RCLONE_SERVICE_ACCOUNT_FILE }}

      - name: Backup Roles
        run: supabase db dump --db-url "$supabase_db_url" -f roles.sql --role-only
      - name: Backup Schema
        run: supabase db dump --db-url "$supabase_db_url" -f schema.sql
      - name: Backup Data
        run: supabase db dump --db-url "$supabase_db_url" -f data.sql --data-only --use-copy
      - name: Zip Backup Files
        run: zip backup.zip roles.sql schema.sql data.sql

      - name: Set Date Environment Variable
        run: echo "DATE_VARIABLE=$(date +'%d-%m-%Y')" >> $GITHUB_ENV

      - name: Remove 30 Day Old Backups
        run: rclone delete -vv --min-age 30d "remote:"

      - name: Upload Backup
        run: rclone copyto backup.zip "remote:${{ env.DATE_VARIABLE }}.zip" -vv
